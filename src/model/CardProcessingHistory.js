/**
 * Mastercard Track Search API
 * All functionality related to the search service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CardProcessingHistory model module.
 * @module model/CardProcessingHistory
 * @version 1.0.0
 */
class CardProcessingHistory {
    /**
     * Constructs a new <code>CardProcessingHistory</code>.
     * Details of the card processing history for the buyer or supplier from the search result.
     * @alias module:model/CardProcessingHistory
     */
    constructor() { 
        
        CardProcessingHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CardProcessingHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CardProcessingHistory} obj Optional instance to populate.
     * @return {module:model/CardProcessingHistory} The populated <code>CardProcessingHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CardProcessingHistory();

            if (data.hasOwnProperty('commercialHistory')) {
                obj['commercialHistory'] = ApiClient.convertToType(data['commercialHistory'], 'String');
            }
            if (data.hasOwnProperty('commercialRecency')) {
                obj['commercialRecency'] = ApiClient.convertToType(data['commercialRecency'], 'String');
            }
            if (data.hasOwnProperty('inControlHistory')) {
                obj['inControlHistory'] = ApiClient.convertToType(data['inControlHistory'], 'String');
            }
            if (data.hasOwnProperty('inControlRecency')) {
                obj['inControlRecency'] = ApiClient.convertToType(data['inControlRecency'], 'String');
            }
            if (data.hasOwnProperty('mcc')) {
                obj['mcc'] = ApiClient.convertToType(data['mcc'], 'String');
            }
            if (data.hasOwnProperty('mccGroup')) {
                obj['mccGroup'] = ApiClient.convertToType(data['mccGroup'], 'String');
            }
            if (data.hasOwnProperty('minorityOwned')) {
                obj['minorityOwned'] = ApiClient.convertToType(data['minorityOwned'], 'String');
            }
            if (data.hasOwnProperty('nonProfit')) {
                obj['nonProfit'] = ApiClient.convertToType(data['nonProfit'], 'String');
            }
            if (data.hasOwnProperty('purchaseCardLevel')) {
                obj['purchaseCardLevel'] = ApiClient.convertToType(data['purchaseCardLevel'], 'Number');
            }
            if (data.hasOwnProperty('smallBusiness')) {
                obj['smallBusiness'] = ApiClient.convertToType(data['smallBusiness'], 'String');
            }
            if (data.hasOwnProperty('transactionRecency')) {
                obj['transactionRecency'] = ApiClient.convertToType(data['transactionRecency'], 'String');
            }
            if (data.hasOwnProperty('womenOwned')) {
                obj['womenOwned'] = ApiClient.convertToType(data['womenOwned'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CardProcessingHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CardProcessingHistory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['commercialHistory'] && !(typeof data['commercialHistory'] === 'string' || data['commercialHistory'] instanceof String)) {
            throw new Error("Expected the field `commercialHistory` to be a primitive type in the JSON string but got " + data['commercialHistory']);
        }
        // ensure the json data is a string
        if (data['commercialRecency'] && !(typeof data['commercialRecency'] === 'string' || data['commercialRecency'] instanceof String)) {
            throw new Error("Expected the field `commercialRecency` to be a primitive type in the JSON string but got " + data['commercialRecency']);
        }
        // ensure the json data is a string
        if (data['inControlHistory'] && !(typeof data['inControlHistory'] === 'string' || data['inControlHistory'] instanceof String)) {
            throw new Error("Expected the field `inControlHistory` to be a primitive type in the JSON string but got " + data['inControlHistory']);
        }
        // ensure the json data is a string
        if (data['inControlRecency'] && !(typeof data['inControlRecency'] === 'string' || data['inControlRecency'] instanceof String)) {
            throw new Error("Expected the field `inControlRecency` to be a primitive type in the JSON string but got " + data['inControlRecency']);
        }
        // ensure the json data is a string
        if (data['mcc'] && !(typeof data['mcc'] === 'string' || data['mcc'] instanceof String)) {
            throw new Error("Expected the field `mcc` to be a primitive type in the JSON string but got " + data['mcc']);
        }
        // ensure the json data is a string
        if (data['mccGroup'] && !(typeof data['mccGroup'] === 'string' || data['mccGroup'] instanceof String)) {
            throw new Error("Expected the field `mccGroup` to be a primitive type in the JSON string but got " + data['mccGroup']);
        }
        // ensure the json data is a string
        if (data['minorityOwned'] && !(typeof data['minorityOwned'] === 'string' || data['minorityOwned'] instanceof String)) {
            throw new Error("Expected the field `minorityOwned` to be a primitive type in the JSON string but got " + data['minorityOwned']);
        }
        // ensure the json data is a string
        if (data['nonProfit'] && !(typeof data['nonProfit'] === 'string' || data['nonProfit'] instanceof String)) {
            throw new Error("Expected the field `nonProfit` to be a primitive type in the JSON string but got " + data['nonProfit']);
        }
        // ensure the json data is a string
        if (data['smallBusiness'] && !(typeof data['smallBusiness'] === 'string' || data['smallBusiness'] instanceof String)) {
            throw new Error("Expected the field `smallBusiness` to be a primitive type in the JSON string but got " + data['smallBusiness']);
        }
        // ensure the json data is a string
        if (data['transactionRecency'] && !(typeof data['transactionRecency'] === 'string' || data['transactionRecency'] instanceof String)) {
            throw new Error("Expected the field `transactionRecency` to be a primitive type in the JSON string but got " + data['transactionRecency']);
        }
        // ensure the json data is a string
        if (data['womenOwned'] && !(typeof data['womenOwned'] === 'string' || data['womenOwned'] instanceof String)) {
            throw new Error("Expected the field `womenOwned` to be a primitive type in the JSON string but got " + data['womenOwned']);
        }

        return true;
    }


}



/**
 * Indicator showing the Supplier processed a Mastercard Commercial Card payment.
 * @member {String} commercialHistory
 */
CardProcessingHistory.prototype['commercialHistory'] = undefined;

/**
 * How recently did the Supplier processed a Mastercard Commercial Card payment.
 * @member {String} commercialRecency
 */
CardProcessingHistory.prototype['commercialRecency'] = undefined;

/**
 * Indicator showing if the matched Supplier processed a payment from an In Control generated virtual card.
 * @member {String} inControlHistory
 */
CardProcessingHistory.prototype['inControlHistory'] = undefined;

/**
 * Indicates how recently the matched Supplier processed a Mastercard Card payment.
 * @member {String} inControlRecency
 */
CardProcessingHistory.prototype['inControlRecency'] = undefined;

/**
 * Merchant Category Code of Entity (Suppliers only).
 * @member {String} mcc
 */
CardProcessingHistory.prototype['mcc'] = undefined;

/**
 * Merchant Category Code Group (Suppliers Only).
 * @member {String} mccGroup
 */
CardProcessingHistory.prototype['mccGroup'] = undefined;

/**
 * Indicator showing the Supplier is minority owned (US Only).
 * @member {String} minorityOwned
 */
CardProcessingHistory.prototype['minorityOwned'] = undefined;

/**
 * Indicator showing the Supplier a non-profit (US Only).
 * @member {String} nonProfit
 */
CardProcessingHistory.prototype['nonProfit'] = undefined;

/**
 * Purchase Card Level: either 0, 1 or 2.
 * @member {Number} purchaseCardLevel
 */
CardProcessingHistory.prototype['purchaseCardLevel'] = undefined;

/**
 * Indicator showing is the Supplier a small business (US Only).
 * @member {String} smallBusiness
 */
CardProcessingHistory.prototype['smallBusiness'] = undefined;

/**
 * Indicates how recently the matched Supplier processed a Mastercard Card payment.
 * @member {String} transactionRecency
 */
CardProcessingHistory.prototype['transactionRecency'] = undefined;

/**
 * Is the Supplier women owned (US Only).
 * @member {String} womenOwned
 */
CardProcessingHistory.prototype['womenOwned'] = undefined;






export default CardProcessingHistory;

