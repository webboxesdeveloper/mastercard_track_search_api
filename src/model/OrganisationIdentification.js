/**
 * Mastercard Track Search API
 * All functionality related to the search service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrganisationIdentification model module.
 * @module model/OrganisationIdentification
 * @version 1.0.0
 */
class OrganisationIdentification {
    /**
     * Constructs a new <code>OrganisationIdentification</code>.
     * Organization identification for the entity being queried.
     * @alias module:model/OrganisationIdentification
     */
    constructor() { 
        
        OrganisationIdentification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrganisationIdentification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganisationIdentification} obj Optional instance to populate.
     * @return {module:model/OrganisationIdentification} The populated <code>OrganisationIdentification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganisationIdentification();

            if (data.hasOwnProperty('identification')) {
                obj['identification'] = ApiClient.convertToType(data['identification'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganisationIdentification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganisationIdentification</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['identification'] && !(typeof data['identification'] === 'string' || data['identification'] instanceof String)) {
            throw new Error("Expected the field `identification` to be a primitive type in the JSON string but got " + data['identification']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Identification for the relationship of Entity to be queried. Alphanumeric characters allowed.
 * @member {String} identification
 */
OrganisationIdentification.prototype['identification'] = undefined;

/**
 * Identification type for the relationship of Entity to be queried.  Valid values:   * TXID - Tax ID   * CUST - Customer Number   * MTID - Mastercard Track ID
 * @member {String} type
 */
OrganisationIdentification.prototype['type'] = undefined;






export default OrganisationIdentification;

